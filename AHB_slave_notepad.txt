module AHB_slave(hresetn, hresp, hclk, hwrite, hreadyin, haddr, hwdata, htrans, haddr1, hwdata1, hwritereg, valid, haddr2, hwdata2, tempselx, hwritereg1, prdata, hrdata);
  input hresetn;
  input hclk;
  input hwrite;
  input hreadyin;
  input [31:0] haddr, hwdata, prdata;
  input [1:0] htrans;
  output reg [31:0] haddr1, hwdata1;
  output reg hwritereg; 
  output reg valid;
  output reg [31:0] haddr2, hwdata2;
  output reg [2:0] tempselx;
  output reg hwritereg1;
  output [31:0] hrdata;
  output [1:0] hresp;
  
  always @(posedge hclk) begin
    if (!hresetn) begin
      haddr1 <= 0;
      haddr2 <= 0;
    end
    else begin
      haddr1 <= haddr;
      haddr2 <= haddr1;
    end
  end
  
  always @(posedge hclk) begin
    if (!hresetn) begin
      hwdata1 <= 0;
      hwdata2 <= 0;
    end
    else begin
      hwdata1 <= hwdata;
      hwdata2 <= hwdata1;
    end
  end
  
  always @(posedge hclk) begin
    if (!hresetn) begin
      hwritereg <= 0;
      hwritereg1 <= 0;
    end
    else begin
      hwritereg <= hwrite;
      hwritereg1 <= hwritereg;
    end
  end
  
  always @(*) begin
    if (hreadyin == 1 && haddr >= 32'h8000_0000 && haddr < 32'h8c00_0000 && (htrans == 2'b10 || htrans == 2'b11))
      valid = 1;
    else
      valid = 0;
  end 
  
  always @(*) begin   
    if (haddr >= 32'h8000_0000 && haddr < 32'h8400_0000)
      tempselx = 3'b001;
    else if (haddr >= 32'h8400_0000 && haddr < 32'h8800_0000)
      tempselx = 3'b010;
    else if (haddr >= 32'h8800_0000 && haddr < 32'h8c00_0000)
      tempselx = 3'b011;
    else
      tempselx = 0;
  end
  
  assign hrdata = prdata;
  assign hresp = 0;
endmodule
